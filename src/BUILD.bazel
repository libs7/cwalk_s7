package(default_visibility = ["//visibility:public"])

load("@rules_cc//cc:defs.bzl",
     "cc_library",
     # "cc_shared_library"
     )

# exports_files(["libcwalk_clibgen.scm"])

load("@libs7//:BUILD.bzl", "BASE_COPTS")
load("@libs7//lib:BUILD.bzl", "clibgen_runner")

load("//:BUILD.bzl", "CWALK_VERSION", "CWALK_S7_VERSION", "LIBS7_VERSION")

SRCS = ["@libs7//src:s7.h"]
INCLUDE_PATHS = [
    "-Iexternal/libs7~{}/src".format(LIBS7_VERSION),
    "-Iexternal/cwalk~{}/include".format(CWALK_VERSION),
    # "-Iexternal/liblog_cc~{}/src".format(LIBLOG_CC_VERSION),
    # when built within libs7 repo, this is needed:
    "-Isrc"
]
COPTS         = BASE_COPTS + INCLUDE_PATHS
DEPS          = ["@libs7//src:s7", "@cwalk//src:cwalk"]
# "@liblog_cc//src:logc",

################################################################
cc_library(
    name            = "cwalk_s7",
    linkstatic      = True,
    alwayslink      = True, # ensure init fn sym available for dlsym
    srcs            = SRCS + [
        # ":libcwalk_s7_runbin"
        ":libcwalk_s7.c"
    ],
    deps            = DEPS,
    copts           = COPTS,
    # linkopts      = LINKOPTS,
    # local_defines = DEFINES
)

cc_shared_library(
    name            = "cwalk_s7_dso",  # create libcwalk_s7.{dylib,so}
    shared_lib_name = select({
        "@platforms//os:macos": "libcwalk_s7.dylib",
        "@platforms//os:linux": "libcwalk_s7.so",
        # "@platforms//os:windows": "libcwalk_s7.dll",
        "//conditions:default": "libcwalk_s7.so"
    }),
    deps            = [":cwalk_s7"]
)

clibgen_runner(
    name = "libcwalk_s7_runbin",
    args = ["--script", "$(location libcwalk_clibgen.scm)"],
    srcs = [":libcwalk_clibgen.scm"],
    outs = [":libcwalk_s7.c"]
)
