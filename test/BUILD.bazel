load("@rules_cc//cc:defs.bzl", "cc_test")

load("@liblogc//macros:logging.bzl", "LOGGING_MACROS")
load("@makeheaders//rules:makeheaders.bzl", "makeheaders")

load("//config/cc:CONFIG.bzl",
     "BASE_SRCS",
     "BASE_DEPS",
     "BASE_COPTS",
     "BASE_LINKOPTS",
     "PROFILE")

SRCS = BASE_SRCS + [
    "test_macros.h"
]

DEPS = BASE_DEPS + [
    "@libs7//plugin:s7plugin_test_config",
    "@gopt//lib:gopt",
    "@unity//lib:unity",
    "@uthash//lib:uthash",
]
# INCLUDE_PATHS = BASE_INCLUDE_PATHS + [
#     # "-Isrc",
#     # "-I$(@gopt)/src",
#     # "-I$(@unity)/src",
#     # "-I$(@uthash)/src",
#     # "-I$(GENDIR)/$(@s7_tools)/src",
# ]
COPTS = BASE_COPTS + [
    "-Wno-gnu-statement-expression",
    "-I$(GENDIR)/test"
]
LINKOPTS   = BASE_LINKOPTS
TIMEOUT    = "short"
TAGS       = ["cwalk"]

################################################################
test_suite(
    name  = "test",
    tests = [
        ":cwalk_s7_static_test",
        ":cwalk_s7_dso_static_test",
        ":cwalk_s7_dso_dynamic_test",
    ]
)

cc_test(
    name = "cwalk_s7_static_test",
    linkstatic = True,
    srcs = ["cwalk_test.c", "mkhdrs"],
    deps = DEPS + ["//lib:cwalk_s7"],
    copts = COPTS,
    defines = PROFILE,
    linkopts = LINKOPTS,
    timeout  = TIMEOUT,
)

cc_test(
    name = "cwalk_s7_dso_static_test",
    linkstatic = True,
    srcs = SRCS + [
        "cwalk_test.c",
        "//lib:cwalk_s7_dso",
        ":mkhdrs"
    ],
    defines = PROFILE,
    deps = DEPS,
    copts = COPTS,
    linkopts = LINKOPTS,
    timeout  = TIMEOUT,
)

cc_test(
    name = "cwalk_s7_dso_dynamic_test",
    linkstatic = True,
    srcs = SRCS + [
        "cwalk_test.c",
        ":mkhdrs"
    ],
    defines = PROFILE,
    data = ["//lib:cwalk_s7_dso"],
    deps = DEPS,
    copts = COPTS,
    linkopts = LINKOPTS,
    timeout  = TIMEOUT,
)

# cc_test(
#     name = "cwalk_s7",
#     linkstatic = True,
#     srcs = SRCS + ["cwalk_test.c"] + select({
#         # "//config/clibs/linktime:load?": [
#         "//config/clibs/link:shared?": [
#             "//lib/libcwalk:cwalk_s7.c" ## , "//lib/libcwalk:libcwalk_s7.h",
#         ],
#         "//conditions:default": []
#     }),
#     defines = PROFILE,
#     deps = DEPS + select({
#         # "//config/clibs/linktime:build?": [
#         "//config/clibs/link:archive?": [
#             "@cwalk_s7//lib:cwalk_s7"
#             # "//lib/libcwalk:cwalk_s7"
#         ],
#         # "//config/clibs/linktime:load?": [
#         #     "//lib/libcwalk:cwalk_s7_dso"],
#         "//conditions:default": []
#     }),
#     data = select({
#         # "//config/clibs/linktime:run?": [
#         "//config/clibs/link:runtime?": [
#             "@cwalk_s7//lib:cwalk_s7_dso"
#             # "//lib/libcwalk:cwalk_s7_dso"
#         ],
#         "//conditions:default": []
#     }),
#     copts = COPTS + [
#         # "-I$(GENDIR)/lib/libcwalk",
#         # "-I$(GENDIR)/external/libs7/lib/libcwalk",
#     ],
#     linkopts = LINKOPTS,
#     timeout = TIMEOUT
# )

makeheaders(
    name             = "mkhdrs",
    hdrs_srcs        = ["cwalk_test.c"],
    additional_srcs  = LOGGING_MACROS + select({
        "@liblogc//compilation_mode:fastbuild?": [
            "@libs7//macros:s7_logging_debug.h",
        ],
        "//conditions:default": [
            "@libs7//macros:s7_logging_ndebug.h",
        ]
    })
)
